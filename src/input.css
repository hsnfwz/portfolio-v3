/* npx tailwindcss -i ./src/input.css -o ./src/output.css --watch */

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  
}

@layer base {
  @font-face {
    font-family: 'Montserrat Regular';
    font-display: block;
    src: url(./fonts/Montserrat-Regular.woff2) format('woff2');
  }
}

@layer base {
  @font-face {
    font-family: 'Montserrat Black';
    font-display: block;
    src: url(./fonts/Montserrat-Black.woff2) format('woff2');
  }
}

@layer base {
  @font-face {
    font-family: 'Montserrat Bold';
    font-display: block;
    src: url(./fonts/Montserrat-Bold.woff2) format('woff2');
  }
}

@layer base {
  @font-face {
    font-family: 'Montserrat Light';
    font-display: block;
    src: url(./fonts/Montserrat-Light.woff2) format('woff2');
  }
}

@layer base {
  @font-face {
    font-family: 'Montserrat Thin';
    font-display: block;
    src: url(./fonts/Montserrat-Thin.woff2) format('woff2');
  }
}

html {
  scroll-behavior: smooth;
}

svg {
  width: 0%;
  height: 0%;
}

.p_scroller {
  overflow: hidden;
}

.p_scroller[data-animated="true"] .p_scroller_inner {
  --half-gap: 2rem; /* value is equal to half the gap between scroll elements */
  width: max-content;
  animation: scroll var(--animation-duration, 30s) var(--animation-direction, forwards) linear infinite;
}

.p_scroller[data-direction="left"] {
  --animation-direction: forwards;
}

.p_scroller[data-direction="right"] {
  --animation-direction: reverse;
}

.p_scroller[data-speed="fast"] {
  --animation-duration: 30s;
}

.p_scroller[data-speed="slow"] {
  --animation-duration: 60s;
}

@keyframes scroll {
  to {
    transform: translate(calc(-50% - var(--half-gap)));
  }
}

.p_hover_3d {
  -webkit-perspective: 2000px;
  perspective: 2000px; /* the higher the number the less intense */
}

.p_hover_3d_inner {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.p_circle {
  aspect-ratio: 1;
  border-radius: 100%;
}

.p_square {
  aspect-ratio: 1;
  border-radius: 16px;
}

.p_triangle_equilateral_up {
  --r: 16px; /* border radius */

  aspect-ratio: 1/cos(30deg);

  --_g:calc(tan(60deg)*var(--r)) bottom var(--r),#000 98%,#0000 101%;

  -webkit-mask:
    conic-gradient(from -30deg at 50% calc(200% - 3*var(--r)/2),#000 60deg,#0000 0)
     0 100%/100% calc(100% - 3*var(--r)/2) no-repeat,
    radial-gradient(var(--r) at 50% calc(2*var(--r)),#000 98%,#0000 101%),
    radial-gradient(var(--r) at left  var(--_g)),
    radial-gradient(var(--r) at right var(--_g));

  clip-path: polygon(50% 0,100% 100%,0 100%);
}

.p_rotate_shape {
  animation-name: rotate;
  animation-duration: 1s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-play-state: paused;
}

.p_hover_3d[data-animated="true"]:hover .p_rotate_shape {
  animation-play-state: running;
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(30deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

.p_shrink_wiggle_shape {
  animation-name: shrink-wiggle;
  animation-duration: 5s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-play-state: paused;
}

.p_hover_3d[data-animated="true"]:hover .p_shrink_wiggle_shape {
  animation-play-state: running;
}

@keyframes shrink-wiggle {
  0% {
    transform: scale(1) rotate(0deg);
  }
  50% {
    transform: scale(0.5) rotate(45deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

#about, #work, #projects, #contact:target {
  scroll-margin-top: 50px;
}

.p_rotate_border {
  width: 100%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  /* padding: 8px; */
  border-radius: 16px;
}

.p_rotate_border .p_rotate_border_inner {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
  background: rgba(255,255,255,0.7);
  /* border-radius: 10px; */
}

.p_rotate_border_inner_background {
  background: linear-gradient(
    90deg,
    rgba(253, 224, 71, 1) 0%,
    rgba(125, 211, 252, 1) 100%
  );
  height: 1200px;
  width: 1200px;
  position: absolute;
  animation: rotate-border 3s linear infinite;
  animation-play-state: paused;
  z-index: 0;
}

.p_rotate_border[data-animated="true"] .p_rotate_border_inner_background {
  animation-play-state: running;
}

@keyframes rotate-border {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}